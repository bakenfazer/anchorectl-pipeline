# This workflow checks out code, builds an image, performs a container image
# scan, evaluates the image, and promotes it if it passes.

name: Anchore Enterprise with anchorectl

on: 
  #push:
  #  branches:
  #    - main
  schedule:
    - cron: '38 23 */14 * *'
  workflow_dispatch:
    inputs:
      mode:
        description: 'Manual Build'  
        
jobs:

  Build-Scan-Promote:
    runs-on: ubuntu-latest
    env:
      ANCHORECTL_USERNAME: ${{ secrets.ANCHORECTL_USERNAME }}
      ANCHORECTL_PASSWORD: ${{ secrets.ANCHORECTL_PASSWORD }}
      ANCHORECTL_URL: ${{ secrets.ANCHORECTL_URL }}
      ## set ANCHORECTL_FAIL_BASED_ON_RESULTS to true if you want to break the pipeline based on the evaluation
      ANCHORECTL_FAIL_BASED_ON_RESULTS: false
      REGISTRY: ghcr.io

    steps:
    
    # we'll use the tag with the SHA for testing, once we are satisfied we'll use the tag with the
    # branch name and then actually push that to the registry (the SHA tag never gets pushed)
    - name: "Set environmental variables"
      run: |
        echo "IMAGE_SHA=${REGISTRY}/${GITHUB_REPOSITORY}:${GITHUB_SHA}" >> $GITHUB_ENV
        echo "IMAGE=${REGISTRY}/${GITHUB_REPOSITORY}:${GITHUB_REF_NAME}" >> $GITHUB_ENV
        
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}      
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    ### note that if you want to scan locally, then push the SBOM to
    ### anchore enterprise, you can set "push: false" so the image stays local
    ### 
    - name: build local container
      uses: docker/build-push-action@v3
      with:
        tags: ${{ env.IMAGE }}
        push: true
        load: false
                
    - name: Install Anchore CLI Tools
      run: |
        curl -sSfL https://anchorectl-releases.anchore.io/anchorectl/install.sh | sh -s -- -b ${HOME}/.local/bin v1.4.0
        curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b ${HOME}/.local/bin v0.73.0
        export PATH="${HOME}/.local/bin/:${PATH}"
        
    - name: Verify Anchore Ready and Reachable
      run: |
        anchorectl system status 
        
    - name: Queue Image for Scanning by Anchore Enterprise
      run: |        
       anchorectl image add --no-auto-subscribe --wait ${IMAGE} 
       ### if desired, you could pass the dockerfile:
       ### anchorectl image add --no-auto-subscribe --wait --force --dockerfile ./Dockerfile ${IMAGE}
        
    ### ALTERNATE
    ### if you want to scan locally, use this instead
    #- name: Generate SBOM and Push to Anchore
    #  run: |        
    #    syft -o json packages ${IMAGE} | anchorectl image add --no-auto-subscribe --force --wait ${IMAGE} --from -
        
    - name: Pull Vulnerability List
      run: |
        anchorectl image vulnerabilities ${IMAGE} 
        
    - name: Pull Policy Evaluation
      run: |
        # set "ANCHORECTL_FAIL_BASED_ON_RESULTS=true" (see above in the "env:" section) to break the pipeline here if the 
        # policy evaluation returns FAIL or add -f, --fail-based-on-results to this command for the same result
        #
        anchorectl image check --detail ${IMAGE}

    
    ### I've commented this out because the credential I use for this demo only has the "image-analyzer" role
    ### which doesn't allow "image delete" - if you want to clean this up you'll need at least read-write role.
    #- name: Purge Unneeded Evaluation
    #  run: |
    #    anchorectl image delete ${IMAGE}
    
    ## optional, if you want continuous re-evaluations
    #- name: Activate Subscriptions
    #    anchorectl subscription activate ${IMAGE} policy_eval
    #    anchorectl subscription activate ${IMAGE} vuln_update
        
